name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: false

      - name: Build wheels
        run: |
          uv build

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/

  test-wheels:
    name: Test wheels
    needs: build-wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: dist/

      - name: Install wheel
        run: |
          pip install dist/*.whl

      - name: Test installation
        run: |
          python -c "
          from ax_utils.ax_queue import AXQueue
          from ax_utils.ax_tree import AXTree 
          from ax_utils.props_to_tree import props_to_tree
          from ax_utils.unicode_utils import is_utf8
          print('âœ… Wheel installation successful')
          "

  release:
    name: Release to PyPI
    needs: [build-wheels, test-wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: release

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Flatten dist directory
        run: |
          find dist/ -name "*.whl" -exec mv {} dist/ \;
          find dist/ -name "*.tar.gz" -exec mv {} dist/ \;
          find dist/ -mindepth 1 -type d -exec rm -rf {} + || true
          ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify-metadata: false
